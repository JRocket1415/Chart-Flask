"""empty message

Revision ID: d6d5f7106735
Revises: 
Create Date: 2022-12-30 11:50:46.100903

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd6d5f7106735'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Tenant',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('User',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.Text(), nullable=False),
    sa.Column('TenantId', sa.Integer(), nullable=False),
    sa.Column('Email', sa.String(length=30), nullable=False),
    sa.Column('Password', sa.String(length=100), nullable=False),
    sa.Column('CreatedAt', sa.DateTime(), nullable=False),
    sa.Column('UpdatedAt', sa.DateTime(), nullable=False),
    sa.Column('Deleted', sa.Boolean(), nullable=True),
    sa.Column('AccountTypeId', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['TenantId'], ['Tenant.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    sa.UniqueConstraint('Email')
    )
    op.create_table('Workspace',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.Text(), nullable=False),
    sa.Column('TenantId', sa.Integer(), nullable=False),
    sa.Column('StatusDate', sa.Date(), nullable=False),
    sa.Column('Description', sa.Text(), nullable=True),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('CreatedAt', sa.DateTime(), nullable=False),
    sa.Column('UpdatedAt', sa.DateTime(), nullable=False),
    sa.Column('SharedUsers', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['CreatedByUserId'], ['User.Id'], ),
    sa.ForeignKeyConstraint(['TenantId'], ['Tenant.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('Portfolio',
    sa.Column('Id', sa.String(length=40), nullable=False),
    sa.Column('Name', sa.String(length=30), nullable=False),
    sa.Column('WorkspaceId', sa.Integer(), nullable=False),
    sa.Column('StatusDate', sa.DateTime(), nullable=False),
    sa.Column('CreatedByUserId', sa.Integer(), nullable=False),
    sa.Column('LastModifiedByUserId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['CreatedByUserId'], ['User.Id'], ),
    sa.ForeignKeyConstraint(['LastModifiedByUserId'], ['User.Id'], ),
    sa.ForeignKeyConstraint(['WorkspaceId'], ['Workspace.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('Project',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.Text(), nullable=False),
    sa.Column('WorkspaceId', sa.Integer(), nullable=False),
    sa.Column('BaselineStartDate', sa.DateTime(), nullable=False),
    sa.Column('BaselinePriority', sa.Integer(), nullable=True),
    sa.Column('Tags', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['WorkspaceId'], ['Workspace.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('Resource',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.Text(), nullable=False),
    sa.Column('WorkspaceId', sa.Integer(), nullable=False),
    sa.Column('BaselineCapacity', sa.Text(), nullable=True),
    sa.Column('StartAt', sa.DateTime(), nullable=False),
    sa.Column('Tags', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['WorkspaceId'], ['Workspace.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('PortfolioProject',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('PortfolioId', sa.String(length=40), nullable=False),
    sa.Column('ProjectId', sa.Integer(), nullable=False),
    sa.Column('IsSelected', sa.Boolean(), nullable=True),
    sa.Column('AdjustedStartDate', sa.DateTime(), nullable=False),
    sa.Column('AdjustedPriority', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['PortfolioId'], ['Portfolio.Id'], ),
    sa.ForeignKeyConstraint(['ProjectId'], ['Project.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('PortfolioResource',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('PortfolioId', sa.String(length=40), nullable=False),
    sa.Column('ResourceId', sa.Integer(), nullable=False),
    sa.Column('AdjustedCapacity', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['PortfolioId'], ['Portfolio.Id'], ),
    sa.ForeignKeyConstraint(['ResourceId'], ['Resource.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('ProjectResource',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ProjectId', sa.Integer(), nullable=False),
    sa.Column('ResourceId', sa.Integer(), nullable=False),
    sa.Column('BaselineDemand', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['ProjectId'], ['Project.Id'], ),
    sa.ForeignKeyConstraint(['ResourceId'], ['Resource.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    op.create_table('PortfolioProjectResource',
    sa.Column('Id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('PortfolioProjectId', sa.Integer(), nullable=False),
    sa.Column('PortfolioResourceId', sa.Integer(), nullable=False),
    sa.Column('AdjustDemand', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['PortfolioProjectId'], ['PortfolioProject.Id'], ),
    sa.ForeignKeyConstraint(['PortfolioResourceId'], ['PortfolioResource.Id'], ),
    sa.PrimaryKeyConstraint('Id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('PortfolioProjectResource')
    op.drop_table('ProjectResource')
    op.drop_table('PortfolioResource')
    op.drop_table('PortfolioProject')
    op.drop_table('Resource')
    op.drop_table('Project')
    op.drop_table('Portfolio')
    op.drop_table('Workspace')
    op.drop_table('User')
    op.drop_table('Tenant')
    # ### end Alembic commands ###
